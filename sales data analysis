{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":2518637,"sourceType":"datasetVersion","datasetId":1525710}],"dockerImageVersionId":30732,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n\n\npd.set_option('display.max_colwidth', None)\npd.set_option('display.max_rows', None)\n\n\nimport os\n\n# List the contents of the /kaggle/input directory to find the exact path of the dataset\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:26:25.670822Z","iopub.execute_input":"2024-07-03T05:26:25.671272Z","iopub.status.idle":"2024-07-03T05:26:28.278959Z","shell.execute_reply.started":"2024-07-03T05:26:25.671236Z","shell.execute_reply":"2024-07-03T05:26:28.277932Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/sales-data-analysis/Sales Data.csv')","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:46:00.641985Z","iopub.execute_input":"2024-07-03T05:46:00.643413Z","iopub.status.idle":"2024-07-03T05:46:01.494577Z","shell.execute_reply.started":"2024-07-03T05:46:00.643356Z","shell.execute_reply":"2024-07-03T05:46:01.493438Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:46:03.23558Z","iopub.execute_input":"2024-07-03T05:46:03.235978Z","iopub.status.idle":"2024-07-03T05:46:03.266361Z","shell.execute_reply.started":"2024-07-03T05:46:03.235942Z","shell.execute_reply":"2024-07-03T05:46:03.265389Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:46:05.163248Z","iopub.execute_input":"2024-07-03T05:46:05.163631Z","iopub.status.idle":"2024-07-03T05:46:05.170373Z","shell.execute_reply.started":"2024-07-03T05:46:05.1636Z","shell.execute_reply":"2024-07-03T05:46:05.169241Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.sample(5)","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:46:06.54678Z","iopub.execute_input":"2024-07-03T05:46:06.547151Z","iopub.status.idle":"2024-07-03T05:46:06.576437Z","shell.execute_reply.started":"2024-07-03T05:46:06.547121Z","shell.execute_reply":"2024-07-03T05:46:06.575134Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:46:08.100342Z","iopub.execute_input":"2024-07-03T05:46:08.100784Z","iopub.status.idle":"2024-07-03T05:46:08.162761Z","shell.execute_reply.started":"2024-07-03T05:46:08.100749Z","shell.execute_reply":"2024-07-03T05:46:08.161234Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.columns","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:46:09.686555Z","iopub.execute_input":"2024-07-03T05:46:09.686994Z","iopub.status.idle":"2024-07-03T05:46:09.695138Z","shell.execute_reply.started":"2024-07-03T05:46:09.686956Z","shell.execute_reply":"2024-07-03T05:46:09.693724Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.count()","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:46:10.865809Z","iopub.execute_input":"2024-07-03T05:46:10.866909Z","iopub.status.idle":"2024-07-03T05:46:10.91829Z","shell.execute_reply.started":"2024-07-03T05:46:10.866861Z","shell.execute_reply":"2024-07-03T05:46:10.916581Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.drop(['Unnamed: 0'], axis = 1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:47:02.921422Z","iopub.execute_input":"2024-07-03T05:47:02.921895Z","iopub.status.idle":"2024-07-03T05:47:02.942622Z","shell.execute_reply.started":"2024-07-03T05:47:02.921861Z","shell.execute_reply":"2024-07-03T05:47:02.941358Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:47:05.534681Z","iopub.execute_input":"2024-07-03T05:47:05.535053Z","iopub.status.idle":"2024-07-03T05:47:05.55137Z","shell.execute_reply.started":"2024-07-03T05:47:05.535021Z","shell.execute_reply":"2024-07-03T05:47:05.550297Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.describe()","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:47:09.451367Z","iopub.execute_input":"2024-07-03T05:47:09.451774Z","iopub.status.idle":"2024-07-03T05:47:09.514301Z","shell.execute_reply.started":"2024-07-03T05:47:09.451743Z","shell.execute_reply":"2024-07-03T05:47:09.513064Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:47:11.351786Z","iopub.execute_input":"2024-07-03T05:47:11.352397Z","iopub.status.idle":"2024-07-03T05:47:11.362431Z","shell.execute_reply.started":"2024-07-03T05:47:11.352355Z","shell.execute_reply":"2024-07-03T05:47:11.36057Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Check missing values in dataset by heatmap\nplt.figure(figsize=(10,6))\nsns.heatmap(df.isnull(),cbar=False)\nplt.title('Heatmap for Null values')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:47:13.061509Z","iopub.execute_input":"2024-07-03T05:47:13.061955Z","iopub.status.idle":"2024-07-03T05:47:15.44488Z","shell.execute_reply.started":"2024-07-03T05:47:13.061919Z","shell.execute_reply":"2024-07-03T05:47:15.44369Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:47:18.234841Z","iopub.execute_input":"2024-07-03T05:47:18.235229Z","iopub.status.idle":"2024-07-03T05:47:18.284739Z","shell.execute_reply.started":"2024-07-03T05:47:18.235197Z","shell.execute_reply":"2024-07-03T05:47:18.283321Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# check duplicate values in dataset\ndf.duplicated().sum()","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:47:19.674396Z","iopub.execute_input":"2024-07-03T05:47:19.674785Z","iopub.status.idle":"2024-07-03T05:47:19.852516Z","shell.execute_reply.started":"2024-07-03T05:47:19.674757Z","shell.execute_reply":"2024-07-03T05:47:19.851441Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# See the Duplilcated values\ndf_cleaned = df[df.duplicated()]\ndf_cleaned.columns","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:47:21.519345Z","iopub.execute_input":"2024-07-03T05:47:21.51973Z","iopub.status.idle":"2024-07-03T05:47:21.719338Z","shell.execute_reply.started":"2024-07-03T05:47:21.519695Z","shell.execute_reply":"2024-07-03T05:47:21.718215Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# group by all columns except those to be aggregated\ncolumns_to_group_by = ['Product', 'Order Date', 'Purchase Address', 'Month', 'City', 'Hour']\n\n\n# Aggregae the duplicated rows by summing 'Quantity ordered' and 'sales'\ndf_aggregated = df.groupby(columns_to_group_by).agg({\n    'Quantity Ordered': 'sum',\n    'Sales' : 'sum',\n    'Price Each' : 'first' # or mean if needed\n}).reset_index()\n\ndf_aggregated.to_csv('cleaned_dataset.csv', index=False)\n\nprint('Duplicates handled and cleaned dataset saved.')","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:55:33.274232Z","iopub.execute_input":"2024-07-03T05:55:33.274784Z","iopub.status.idle":"2024-07-03T05:55:34.980285Z","shell.execute_reply.started":"2024-07-03T05:55:33.274746Z","shell.execute_reply":"2024-07-03T05:55:34.979169Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Convert Order data dtype into datetime\ndf['Order Date'] = pd.to_datetime(df['Order Date'])","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:55:57.363794Z","iopub.execute_input":"2024-07-03T05:55:57.364176Z","iopub.status.idle":"2024-07-03T05:55:57.434152Z","shell.execute_reply.started":"2024-07-03T05:55:57.364145Z","shell.execute_reply":"2024-07-03T05:55:57.432624Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:55:58.974001Z","iopub.execute_input":"2024-07-03T05:55:58.974465Z","iopub.status.idle":"2024-07-03T05:55:59.02337Z","shell.execute_reply.started":"2024-07-03T05:55:58.974433Z","shell.execute_reply":"2024-07-03T05:55:59.021376Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Exploratory Data Analysis\n\n\n\n\n### Univariate Analysis\n\n\nUnivariate analysis involves analyzing the distribution of individual columns.\n\n1. **Descriptive Statistics**: Summary statistics for each column.\n2. **Distribution Plots**: Histograms or count plots for each column.","metadata":{}},{"cell_type":"code","source":"# df.select_dtypes(include=['int64','float64'])\n\ndf_sample = df.sample(n=1000)  # Adjust the sample size as needed\ndf_sample.select_dtypes(include=['int64', 'float64'])","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:56:12.64237Z","iopub.execute_input":"2024-07-03T05:56:12.642837Z","iopub.status.idle":"2024-07-03T05:56:12.841787Z","shell.execute_reply.started":"2024-07-03T05:56:12.642801Z","shell.execute_reply":"2024-07-03T05:56:12.8402Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Plotting settings\nsns.set(style=\"whitegrid\")\n\n# Distribution plots for numerical columns\nnumerical_columns = ['Quantity Ordered','Price Each', 'Sales', 'Month', 'Hour']\nfor column in numerical_columns:\n    plt.figure(figsize=(10,6))\n    sns.histplot(df[column], kde=True)\n    plt.title(f'Distribution of {column}')\n    plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:56:35.00162Z","iopub.execute_input":"2024-07-03T05:56:35.002057Z","iopub.status.idle":"2024-07-03T05:56:42.992194Z","shell.execute_reply.started":"2024-07-03T05:56:35.002024Z","shell.execute_reply":"2024-07-03T05:56:42.991098Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Count plots for categorical columns\ncategorical_columns = ['Product', 'City']\nfor column in categorical_columns:\n    plt.figure(figsize=(10, 6))\n    sns.countplot(y=df[column], order=df[column].value_counts().index)\n    plt.title(f'Count Plot of {column}')\n    plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:58:54.343655Z","iopub.execute_input":"2024-07-03T05:58:54.344784Z","iopub.status.idle":"2024-07-03T05:58:55.2655Z","shell.execute_reply.started":"2024-07-03T05:58:54.344732Z","shell.execute_reply":"2024-07-03T05:58:55.26422Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Bivariate Analysis\n\nBivariate analysis involves examining the relationship between two columns.\n\n1. **Correlation Matrix**: Heatmap to see the correlation between numerical features.\n2. **Scatter Plots**: For pairs of numerical columns.\n3. **Box Plots**: For numerical vs. categorical columns.","metadata":{}},{"cell_type":"code","source":"corr_matrix = df.select_dtypes(include=['number']).corr()\ncorr_matrix","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:59:33.979552Z","iopub.execute_input":"2024-07-03T05:59:33.980512Z","iopub.status.idle":"2024-07-03T05:59:34.027913Z","shell.execute_reply.started":"2024-07-03T05:59:33.980443Z","shell.execute_reply":"2024-07-03T05:59:34.026592Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# correlation matrix\nplt.figure(figsize=(12,8))\nsns.heatmap(corr_matrix, annot=True, cmap='coolwarm')\nplt.title('correlation Matrix')\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-07-03T05:59:39.718067Z","iopub.execute_input":"2024-07-03T05:59:39.718462Z","iopub.status.idle":"2024-07-03T05:59:40.23034Z","shell.execute_reply.started":"2024-07-03T05:59:39.718432Z","shell.execute_reply":"2024-07-03T05:59:40.228839Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# scatter plots for pairs of numerical columns\nsns.pairplot(df[numerical_columns])\nplt.suptitle('Pairplot of Numerical Columns', y=1.02)\nplt.show()","metadata":{"scrolled":true,"execution":{"iopub.status.busy":"2024-07-03T05:59:47.528436Z","iopub.execute_input":"2024-07-03T05:59:47.528891Z","iopub.status.idle":"2024-07-03T06:00:04.346609Z","shell.execute_reply.started":"2024-07-03T05:59:47.528855Z","shell.execute_reply":"2024-07-03T06:00:04.345444Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Box plots for numerical vs categorical columns\nfor cat_column in categorical_columns:\n    for num_column in numerical_columns:\n        plt.figure(figsize=(10,6))\n        sns.boxplot(x=cat_column, y=num_column, data=df)\n        plt.title(f'Box plot of {num_column} by {cat_column}')\n        plt.xticks(rotation=90)\n        plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-03T06:00:23.084841Z","iopub.execute_input":"2024-07-03T06:00:23.085283Z","iopub.status.idle":"2024-07-03T06:00:29.365596Z","shell.execute_reply.started":"2024-07-03T06:00:23.08525Z","shell.execute_reply":"2024-07-03T06:00:29.364439Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Multivariate Analysis\n\nMultivariate analysis involves examining relationships among three or more columns simultaneously.\n\n1. **Pair Plot**: With a hue for categorical data.\n   \n3. **FacetGrid**: For conditional distributions.\n\n4. **Heatmaps**: For interaction between multiple features.","metadata":{}},{"cell_type":"code","source":"df_sample.select_dtypes(include=['object']).head(3)","metadata":{"execution":{"iopub.status.busy":"2024-07-03T06:02:05.345753Z","iopub.execute_input":"2024-07-03T06:02:05.346496Z","iopub.status.idle":"2024-07-03T06:02:05.363739Z","shell.execute_reply.started":"2024-07-03T06:02:05.346437Z","shell.execute_reply":"2024-07-03T06:02:05.361919Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Pair Pplot with hue for a categorical column\nsns.pairplot(df, hue = 'Product')\nplt.suptitle('Pairplot with product', y=1.02)\nplt.show()","metadata":{"scrolled":true,"execution":{"iopub.status.busy":"2024-07-03T06:02:32.110195Z","iopub.execute_input":"2024-07-03T06:02:32.110632Z","iopub.status.idle":"2024-07-03T06:08:30.769123Z","shell.execute_reply.started":"2024-07-03T06:02:32.110598Z","shell.execute_reply":"2024-07-03T06:08:30.76792Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Product Category Differentiation:\n\n* The coloring by product category helps differentiate how different categories behave with respect to numerical features.\n\n* It provides insights into whether certain numerical features are good discriminators for product categories.\n\nBy examining these pair plots, we can derive valuable insights into the relationships between features, the influence of product categories, and potential areas for further investigation in our data analysis process.","metadata":{}},{"cell_type":"code","source":"# Check the number of unique values\nunique_products = df['Product'].nunique()\nunique_cities = df['City'].nunique()","metadata":{"execution":{"iopub.status.busy":"2024-07-03T06:27:36.700398Z","iopub.execute_input":"2024-07-03T06:27:36.701736Z","iopub.status.idle":"2024-07-03T06:27:36.734883Z","shell.execute_reply.started":"2024-07-03T06:27:36.701695Z","shell.execute_reply":"2024-07-03T06:27:36.733607Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"\n\n# If there are too many unique values, filter to a manageable subset\nif unique_products > 10:\n    products_to_plot = df['Product'].value_counts().index[:10]\n    df = df[df['Product'].isin(products_to_plot)]\n\nif unique_cities > 5:\n    cities_to_plot = df['City'].value_counts().index[:5]\n    df = df[df['City'].isin(cities_to_plot)]\n\n# Create the FacetGrid\ng = sns.FacetGrid(df, col='City', row='Product', margin_titles=True, height=3)\ng.map_dataframe(sns.histplot, 'Sales', kde=True)\ng.add_legend()\nplt.suptitle('FacetGrid of Sales by Product and City', y=1.02)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-03T06:28:18.922627Z","iopub.execute_input":"2024-07-03T06:28:18.923082Z","iopub.status.idle":"2024-07-03T06:28:46.573719Z","shell.execute_reply.started":"2024-07-03T06:28:18.923048Z","shell.execute_reply":"2024-07-03T06:28:46.572475Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# heatmpa for interaction between multiple features\npivot_table = df.pivot_table(values= 'Sales', index='Product', columns='City', aggfunc = 'sum')\nplt.figure(figsize=(12,8))\nsns.heatmap(pivot_table, annot=True, fmt='.0f', cmap='YlGnBu')\nplt.title('Heatmap of Sales by Product and City')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-03T06:29:00.443307Z","iopub.execute_input":"2024-07-03T06:29:00.444437Z","iopub.status.idle":"2024-07-03T06:29:01.042126Z","shell.execute_reply.started":"2024-07-03T06:29:00.444395Z","shell.execute_reply":"2024-07-03T06:29:01.040879Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# What We Learn from the Above Heatmap\n\n1. **Sales Distribution Across Cities:**\n\n* The heatmap shows how sales are distributed across different products and cities.\n  \n* By examining the color intensity, we can quickly identify cities where certain products perform well (darker shades) or poorly (lighter shades).\n\n2. **High and Low Performing Products and Cities:**\n\n* Products with consistently high sales across multiple cities can be identified.\n\n* Cities where certain products do not sell well are also easily identifiable.\n\n* This information can be crucial for understanding market trends and making data-driven business decisions.\n\n3. **Comparative Analysis:**\n\n* The heatmap allows for easy comparison between different products within the same city.\n\n* Similarly, it enables comparison of the same product across different cities.\n\n4. **Identifying Patterns and Trends:**\n\n* Patterns such as regional preferences for certain products may emerge.\n\n* Trends over time can be inferred if the data includes a temporal component (e.g., different months or years).\n\n\nOverall, this heatmap serves as a powerful visualization tool to understand the interaction between sales, products, and cities, enabling more informed strategic decisions based on data.","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}